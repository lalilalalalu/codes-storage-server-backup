LPGROUPS
{
    #dragonfly_router can be in one group only!
    NETWORK_GRP
    {
        repetitions = "36";
        codes-store="1";
        lsm="1";
        resource="1";
        dragonfly_router="1";
        modelnet_dragonfly="2";
        test-client="1";
    }
}

PARAMS
{
    # ross params
    message_size="608";
    packet_size="512";

    # modelnet params
    modelnet_order=("dragonfly");
    modelnet_scheduler="fcfs"; 
    chunk_size="64";
    num_routers="4";
    
    local_vc_size="262144";
    global_vc_size="262144";
    cn_vc_size="262144";

    local_bandwidth="5.25";
    global_bandwidth="4.7";
    cn_bandwidth="5.25";
    routing="minimal";
    num_vcs="1";
}

# triton server - implements forwarding and acking protocols based on placement
# algorithm 
codes-store
{
    # number of threads to multiplex transfers over
    req_threads = "4";
    # buffer size used by each thread
    thread_buf_sz = "1048576";
}

# size of LP buffer
resource
{
    available="1073741824";
}

# params taken from triton-fault-sim configs
lsm
{
    # table of metrics based on requset size
    # here metrics will be used for any request size
    # request size in bytes
    request_sizes   = ("0"); 

    # write/read rates in MB/s
    write_rates     = ("12000.0");
    read_rates      = ("12000.0");

    # seek latency in microseconds
    write_seeks     = ("2500.0");
    read_seeks      = ("2500.0");

    # latency of completing the smallest I/O request, in microseconds
    write_overheads = ("20.0");
    read_overheads  = ("20.0");
}

test-client
{
    num_reqs = "5";
    req_size = "10000";
}
